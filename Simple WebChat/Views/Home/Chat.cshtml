@model List<Simple_WebChat.Models.Mdl.Mesajlar>
@{
    ViewBag.Title = "Chat";
}

<div class="messaging">
    <div class="inbox_msg">
        <div class="mesgs">
            <div class="msg_history" id="discussion">
                @foreach (var item in Model)
                {
                    if (item.User.UserName == @Session["isim"].ToString())
                    {
                        <div class="outgoing_msg">
                            <div class="sent_msg">
                                <h6><strong>@item.User.UserName.ToUpper()</strong></h6>
                                <p>
                                    @item.Mesaj
                                </p>
                                <span class="time_date"> @item.MesajSaat    |    @item.MesajTarih</span>
                            </div>
                            <div class="outgoing_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        </div>
                    }
                    else
                    {
                        <div class="incoming_msg">
                            <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                            <div class="received_msg">
                                <div class="received_withd_msg">
                                    <h6><strong>@item.User.UserName.ToUpper()</strong></h6>
                                    <p>
                                        @item.Mesaj
                                    </p>
                                    <span class="time_date"> @item.MesajSaat    |    @item.MesajTarih</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="type_msg">
                <div class="input_msg_write">
                    <input type="text" id="message" class="write_msg" placeholder="Mesaj yazın..." />
                    <button class="msg_send_btn"  type="submit" id="sendmessage" value="Gönder" ><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                    <input type="hidden" id="displayname" value="@Session["isim"]" />
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<div class="outgoing_msg"><div class="sent_msg"><h6><strong>' + htmlEncode(name).toUpperCase() + '</strong></h6><p>' + htmlEncode(message) + '</p><span class="time_date"> Şimdi    |           </span></div></div>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

